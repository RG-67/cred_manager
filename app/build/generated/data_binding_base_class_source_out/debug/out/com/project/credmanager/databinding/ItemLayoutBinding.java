// Generated by view binder compiler. Do not edit!
package com.project.credmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.project.credmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView deleteBtn;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView editBtn;

  @NonNull
  public final TextView password;

  @NonNull
  public final ImageView showEye;

  @NonNull
  public final TextView title;

  @NonNull
  public final LinearLayout topLin;

  @NonNull
  public final TextView userName;

  private ItemLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView deleteBtn,
      @NonNull TextView description, @NonNull TextView editBtn, @NonNull TextView password,
      @NonNull ImageView showEye, @NonNull TextView title, @NonNull LinearLayout topLin,
      @NonNull TextView userName) {
    this.rootView = rootView;
    this.deleteBtn = deleteBtn;
    this.description = description;
    this.editBtn = editBtn;
    this.password = password;
    this.showEye = showEye;
    this.title = title;
    this.topLin = topLin;
    this.userName = userName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteBtn;
      TextView deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.editBtn;
      TextView editBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBtn == null) {
        break missingId;
      }

      id = R.id.password;
      TextView password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.showEye;
      ImageView showEye = ViewBindings.findChildViewById(rootView, id);
      if (showEye == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.topLin;
      LinearLayout topLin = ViewBindings.findChildViewById(rootView, id);
      if (topLin == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new ItemLayoutBinding((RelativeLayout) rootView, deleteBtn, description, editBtn,
          password, showEye, title, topLin, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
